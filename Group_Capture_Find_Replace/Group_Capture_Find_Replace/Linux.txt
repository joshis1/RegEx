For find and replace, we will use sed.

$sed -r 's/pattern/replacement/g' inputfile.
-r used for posix extended set.
s used for substitute.
/ used for separator
g used for global - substitute all occurrence
if not g then substitute just once.

Group \1   Group \2 -->  capture groups.

Example 1: 

Replace
1280*720 

with

1280 pix by 720 pix 

$cat regex25.txt 
1280x720
1920x1080
1600x900
1280x1024
800x600
1024x768


$sed -r 's/([0-9]+)x([0-9]+)/\1 pix by \2 pix/g' regex25.txt 
1280 pix by 720 pix
1920 pix by 1080 pix
1600 pix by 900 pix
1280 pix by 1024 pix
800 pix by 600 pix
1024 pix by 768 pix


Example 2: Replace the following pattern as last name, first name.

$cat regex26.txt 
John Wallace
Steve King
Martin Cook
Adam Smith
Irene Peter
Alice Johnson

$sed -r 's/([A-Za-z]+)\s([A-Za-z]+)/\2,\1/g' regex26.txt 
Wallace,John
King,Steve
Cook,Martin
Smith,Adam
Peter,Irene
Johnson,Alice


Example 3: Replace the following pattern as minutes past by hour.

$cat regex27.txt 
7:32
6:12
12:23
1:23
11:33
4:21

$sed -r 's/([0-9]{1,2}):([0-9]{1,2})/\2 minutes past \1/g' regex27.txt 
32 minutes past 7
12 minutes past 6
23 minutes past 12
23 minutes past 1
33 minutes past 11
21 minutes past 4


Example 4: Replace the following pattern as xxx.xxx.<last 4 digits only>.

$cat regex28.txt 
914.582.3013
873.334.2589
521.589.3147
625.235.3698
895.568.2145
745.256.3369

$sed -r 's/[0-9]{,3}\.[0-9]{,3}\.([0-9]{,4})/xxx.xxx.\1/g' regex28.txt
xxx.xxx.3013
xxx.xxx.2589
xxx.xxx.3147
xxx.xxx.3698
xxx.xxx.2145
xxx.xxx.3369

Example 5: Replace the following pattern as 5-Jan-87.

$cat regex29.txt 
Jan 5th 1987
Dec 26th 2010 
Mar 2nd 1923
Oct 1st 2008
Aug 3rd 2009
Jun 10th 2001

$sed -r 's/([A-Z a-z]{3})\s([0-9]+)[a-z]+\s[0-9]{2}([0-9]{2})/\2-\1-\3/g' regex29.txt
5-Jan-87
26-Dec-10 
2-Mar-23
1-Oct-08
3-Aug-09
10-Jun-01


Example 6: Replace the following pattern as 914.582.3013.

$cat regex30.txt 
(914).582.3013
(873).334.2589
(521).589.3147
(625).235.3698
(895).568.2145
(745).256.3369

$sed -r 's/\(([0-9]{3})\)(\.[0-9]{3}\.[0-9]{4})/\1\2/g' regex30.txt 
914.582.3013
873.334.2589
521.589.3147
625.235.3698
895.568.2145
745.256.3369


Example 7: Valid Email check.

Rules -

1) left from  @ is called local part.
2) Right from @ is called the domain name.

domain name - 
.com
.in 
.ca 
.guru -- minimum 2.

local part - allowed - 
letters, digits,hyphens, underscore, dots -- allowed. Others are disallowed.

$cat email_challenge.txt 
bob.123@gmail.com
alice-personal@yahoo.in
admin@cloud.guru  
tom_business@amazon.can
geoerge@yahoo
robert_at_gmail.com
steve austin@gmail.com


$grep -E "^[a-zA-Z0-9_-.]+@[a-zA-Z]+\.[A-Z a-z]{2,}$" ./email_challenge.txt 
bob.123@gmail.com
alice-personal@yahoo.in
admin@cloud.guru  
tom_business@amazon.can










